name: Build Docker Image

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '.gitignore'
      - '.dockerignore'
      - 'README.md'
#    paths:
#      - '**.py'
  pull_request:
    branches: [ master ]

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set var
      id: set-var
      run: |
        echo ::set-output name=ECR_REGISTRY::${{ steps.login-ecr.outputs.registry }}
        echo ::set-output name=ECR_REPOSITORY::demo
        echo ::set-output name=IMAGE_TAG::$(cat VERSION)

    - name: Build
      id: build-image
      run: |
        docker build -t ${{ steps.set-var.outputs.ECR_REGISTRY }}/${{ steps.set-var.outputs.ECR_REPOSITORY }}:${{ steps.set-var.outputs.IMAGE_TAG }} .

    - name: Test
      id: test
      run: |
        docker run --rm ${{ steps.set-var.outputs.ECR_REGISTRY }}/${{ steps.set-var.outputs.ECR_REPOSITORY }}:${{ steps.set-var.outputs.IMAGE_TAG }} /root/.local/bin/pytest -v

    - name: Push
      id: push-image
      run: |
        docker push ${{ steps.set-var.outputs.ECR_REGISTRY }}/${{ steps.set-var.outputs.ECR_REPOSITORY }}:${{ steps.set-var.outputs.IMAGE_TAG }}
